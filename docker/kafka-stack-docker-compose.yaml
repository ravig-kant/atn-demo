version: '3.8'
services:
  kafka-broker-1:
    image: &kafkaImage bitnami/kafka:latest
    hostname: kafka-broker-1
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list" ]
      start_period: 2s
      timeout: 60s
      interval: 2s
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9093,CONTROLLER://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-1:9092,EXTERNAL://kafka-broker-1:9093
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-broker-1:9094
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=5e-ZWJELQjCqW2n3bwMTWg

  init-topics:
    image: *kafkaImage
    working_dir: /opt/bitnami/kafka/bin
    volumes:
      - ./createTopics.sh:/createTopics.sh
    networks:
      - internal
    depends_on:
      kafka-broker-1:
        condition: service_healthy
    command: bash -c "/createTopics.sh"


  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9091:8080
    networks:
      - internal
    depends_on:
      kafka-broker-1:
        condition: service_healthy
    environment:
      AUTH_TYPE: "disabled"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka-broker-1:9092"

networks:
  internal: